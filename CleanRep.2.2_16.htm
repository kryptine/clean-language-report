<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<title>Clean 2.2 Ref Man</title>
<link rel="stylesheet" href="CleanRep.2.2.css" type="text/css">
</head>

<body lang=NL link=blue vlink=purple>
<div class=WordSection17>

<p class=Heading1Chapter><span style='position:absolute;z-index:251672064;
left:0px;margin-left:38px;margin-top:19px;width:200px;height:97px'><img
width=200 height=97 src="CleanRep.2.2_files/image001.jpg"></span><a
name="_Toc311798134"><span lang=EN-US><br>
Appendix C</span></a><a name="_Toc524343619"><br>
<span lang=EN-US>Bibliography</span></a></p>

<p class=par><span lang=EN-US>You can find all our papers on our site:<a
href="http://wiki.clean.cs.ru.nl/Publications">http://wiki.clean.cs.ru.nl/Publications</a></span></p>

<p class=par><span lang=EN-US>Peter Achten, John van Groningen and Rinus
Plasmeijer (1992). ‘High-level specification of I/O in functional languages’. <i>In:
Proc. of the Glasgow workshop on Functional programming</i>, ed. J. Lau­nchbury
and P. Sansom, Ayr, Scotland, Springer-Verlag, Workshops in Comput­ing, pp.
1-17.</span></p>

<p class=par><span lang=EN-US>Peter Achten and Rinus Plasmeijer (1995). ‘The
Ins and Outs of C</span><span lang=EN-US style='font-size:10.0pt;text-transform:
uppercase'>oncurrent</span><span lang=EN-US> C</span><span lang=EN-US
style='font-size:8.0pt;text-transform:uppercase'>lean</span><span lang=EN-US>
I/O’. <i>Jour­nal of Functional Programming,</i> 5, 1, pp. 81-110.</span></p>

<p class=par><span lang=EN-US>Peter Achten and Rinus Plasmeijer (1997).
“Interactive Functional Objects in C</span><span lang=EN-US style='font-size:
8.0pt;text-transform:uppercase'>lean</span><span lang=EN-US>”. In: <i>Proc. of
the 1997 Workshop on the Implementation of Functional Languages (IFL’97)</i>,
ed. K. Hammond Davie, T., and Clack, C., St.Andrews, Scotland, pp. 387-406.</span></p>

<p class=par><span lang=EN-US>Artem Alimarine and Rinus Plasmeijer. A Generic
Programming Extension for Clean. In: Arts, Th., Mohnen, M. eds. Proceedings of
the 13th International workshop on the Implementation of Functional Languages,
IFL'01, Älvsjö, Sweden, September 24-26, 2001, Ericsson Computer Science
Laboratory, pp.257-278. </span></p>

<p class=par>Tom Brus, Marko van Eekelen, Maarten van Leer, Rinus Plasmeijer
(1987). <span lang=EN-US>‘C</span><span lang=EN-US style='font-size:8.0pt;
text-transform:uppercase'>lean</span><span lang=EN-US> - A Lan­guage for
Functional Graph Rewriting’. <i>Proc. of the Third International Conference on
Func­tio­nal Pro­gramming Languages and Computer Architecture (FPCA ‘87)</i>,
Portland, Oregon, USA, LNCS 274, Springer Verlag, 364-384.</span></p>

<p class=par><span lang=EN-US>Barendregt, H.P. (1984). The Lambda-Calculus, its
Syntax and Semantics. North–Holland.</span></p>

<p class=par><span lang=EN-US>Henk Barendregt, Marko van Eekelen, John Glauert,
Richard Kennaway, Rinus Plasmeijer, Ro­nan Sleep (1987). ‘Term Graph
Rewriting’. <i>Proceedings of Parallel Architectures and Lan­guages Eu­rope
(PARLE)</i>, part II, Eindhoven, The Netherlands. LNCS 259, Springer Verlag,
141-158.</span></p>

<p class=par><span lang=EN-US>Erik Barendsen and Sjaak Smetsers (1993a).
‘Extending Graph Rewriting with Copying’. In: <i>Proc. of the Seminar on Graph
Transformations in Computer Science</i>, ed. </span>B. Courcelle, H. Ehrig, G.
Ro­zenberg and H.J. Schneider, Dagstuhl, Wadern, Springer-Verlag, Berlin, LNCS
776, Springer Verlag, pp 51-70.</p>

<p class=par>Erik Barendsen and Sjaak Smetsers (1993b). <span lang=EN-US>‘Conventional
and Uniqueness Typing in Graph Rewrite Systems (extended abstract)’. In: <i>Proc.
of the 13<sup>th</sup> Conference on the Foundations of Soft­ware Technology
&amp; Theoretical Computer Science</i>, ed. R.K. Shyamasundar, Bombay, India,
LNCS 761, Springer Verlag, pp. 41-51.</span></p>

<p class=par><span lang=EN-US>Bird, R.S. and P. Wadler (1988)<i>.</i> <i>Introduction
to Functional Programming</i>. Prentice Hall.</span></p>

<p class=par>Marko van Eekelen, Rinus Plasmeijer, Sjaak Smetsers (1991). <span
lang=EN-US>‘Parallel Graph Rewriting on Loo­sely Coupled Machine
Architectures’. In Kaplan, S. and M. Okada (Eds.) <i>Proc. of the 2<sup>nd</sup>
Int. Worksh. on Conditional and Typed Rewriting Systems (CTRS’90)</i>, 1990.
Montreal, Ca­nada, LNCS 516, Springer Verlag, 354-370.</span></p>

<p class=par>Eekelen, M.C.J.D. van, J.W.M. Smetsers, M.J. Plasmeijer (1997). <span
lang=EN-US>“Graph Rewriting Semantics for Functional Programming Languages”.
In: <i>Proc. of the CSL ‘96, Fifth Annual conference of the European
Association for Computer Science Logic (EACSL)</i>, ed. </span>Marc Bezem Dirk
van Dalen, Utrecht, Springer-Verlag, LNCS, <b>1258</b>, pp. 106-128.</p>

<p class=par><span lang=EN-US>Harper, R., D. MacQueen and R. Milner (1986).
‘Standard ML’. Edinburgh University, Internal re­port ECS-LFCS-86-2.</span></p>

<p class=par><span lang=EN-US>Hindley R. (1969). The principle type scheme of
an object in combinatory logic. <i>Trans. of the Ameri­can Math. Soc.</i>, <b>146</b>,
29-60.</span></p>

<p class=par><span lang=EN-US>Hudak, P. , S. Peyton Jones, Ph. Wadler, B.
Boutel, J. Fairbairn, J. Fasel, K. Hammond, J. Hug­hes, Th. Johnsson, D.
Kieburtz, R. Nikhil, W. Partain and J. Peterson (1992). ‘Report on the pro­gram­ming
language Haskell’. <i>ACM SigPlan notices,</i> <b>27</b>, 5, pp. 1-164.</span></p>

<p class=par><span lang=EN-US>John van Groningen and Rinus Plasmeijer. Strict
and unboxed lists using type constructor classes in a lazy functional language.
Presented at the 13th International Workshop on the Implementation of
Functional Languages, IFL 2001, Älvsjö, Sweden, September 24-26, 2001, Ericsson
Computer Science Laboratory. </span></p>

<p class=par><span lang=EN-US>Jones, M.P. (1993). <i>Gofer - Gofer 2.21 release
notes</i>. Yale University.</span></p>

<p class=par><span lang=EN-US>Marko Kesseler (1991). ‘Implementing the ABC
machine on transputers’. In: <i>Proc. of the 3<sup>rd</sup> In­ter­national
Workshop on Implementation of Functional Languages on Parallel Architectures</i>,
ed. H. Glaser and P. Hartel, Southampton, University of Southampton, Technical
Report 91-07, pp. 147-192.</span></p>

<p class=par><span lang=EN-US>Kesseler, M.H.G. (1996). The Implementation of
Functional Languages on Parallel Machines with Distributed Memory. Ph.D.,
University of Nijmegen.</span></p>

<p class=par><span lang=EN-US>Milner, R.A. (1978). ‘Theory of type polymorphism
in programming’. <i>Journal of Computer and Sys­tem Sciences,</i> <b>17</b>, 3,
348-375.</span></p>

<p class=par><span lang=EN-US>Mycroft A. (1984). Polymorphic type schemes and
recursive defini­tions. In <i>Proc. International Con­fe­r­ence on Programming,</i>
Toulouse (Paul M. and Robinet B., eds.), LNCS <b>167</b>, Springer Ver­lag,
217–239.</span></p>

<p class=par>Eric Nöcker, Sjaak Smetsers, Marko van Eekelen, Rinus Plasmeijer
(1991). ‘C<span style='font-size:10.0pt;text-transform:uppercase'>oncurrent</span>
C<span style='font-size:10.0pt;text-transform:uppercase'>lean</span>’. In
Aarts, E.H.L., J. van Leeuwen, M. Rem (Eds.), <i>Proceedings of the Conference
on Paral­lel Archi­tectures and Languages Europe (PARLE’91)</i>, Vol II,
Eindhoven, The Nether­lands, LNCS 505, Springer Verlag, June 1991, 202-219.</p>

<p class=par><span lang=EN-US>Eric Nöcker (1993). ‘Strictness analysis using
abstract reduction’. In: <i>Proc. of the 6<sup>th</sup> Confe­r­ence on
Functional Programming Languages and Computer Architectures</i>, ed. Arvind,
Copen­hagen, ACM Press, pp. 255-265.</span></p>

<p class=par><span lang=EN-US>Eric Nöcker and Sjaak Smetsers (1993). ‘Partially
strict non-recursive data types’. <i>Journal of Functional Programming,</i> <b>3</b>,
2, pp. 191-215.</span></p>

<p class=par><span lang=EN-US>Pil, M.R.C. (1999), Dynamic  types and type
dependent functions , In Proc. of Implementation of Functional Languages (IFL 
'98), London, U.K., Hammond, Davie and  Clack Eds.,  Springer-Verlag, Berlin,
Lecture Notes in Computer Science 1595,  pp 169-185. </span></p>

<p class=par>Rinus Plasmeijer and Marko van Eekelen (1993). <i><span
lang=EN-US>Functional Programming and Parallel Graph Rewriting</span></i><span
lang=EN-US>. Addison Wesley, ISBN 0-201-41663-8.</span></p>

<p class=par><span lang=EN-US>Sjaak Smetsers, Eric Nöcker, John van Groningen,
Rinus Plasmeijer (1991). ‘Generating Ef­fi­cient Code for Lazy Functional
Languages’. In Hughes, J. (Ed.), <i>Proc. of the Fifth Interna­tional Confer­ence
on Functional Programming Languages and Computer Architecture (FPCA ‘91)</i>,
USA, LNCS 523, Springer Verlag, 592-618.</span></p>

<p class=par>Ronan Sleep, Rinus Plasmeijer and Marko van Eekelen (1993)<i>.</i>
<i><span lang=EN-US>Term Graph Rewriting - The­ory and Practice</span></i><span
lang=EN-US>. John Wiley &amp; Sons.</span></p>

<p class=par><span lang=EN-US>Yoshihito Toyama, Sjaak Smetsers, Marko van
Eekelen and Rinus Plasmeijer (1993). ‘The func­tional strat­egy and transitive
term rewriting systems’. In: <i>Term Graph Rewriting</i>, ed. Sleep, Plas­meijer
and van Eekelen, John Wiley.</span></p>

<p class=par><span lang=EN-US>Turner, D.A. (1985). ‘Miranda: a non-strict
functional language with polymorphic types’. In: <i>Proc. of the Conference on
Functional Programming Languages and Computer Architecture</i>, ed. J.P. Jouan­naud,
Nancy, France. LNCS <b>201</b>, Springer Verlag, 1-16.</span></p>

<p class=par><span lang=EN-US>Martijn Vervoort and Rinus Plasmeijer (2002).
Lazy Dynamic Input/Output in the lazy functional language Clean - early draft
-. In: Peña, R. ed. Proceedings of the 14th International Workshop on the
Implementation of Functional Languages, IFL 2002, Madrid, Spain, September
16-18, 2002, Technical Report 127-02, Departamento de Sistemas Informáticos y
Programació n, Universidad Complutense de Madrid, pages 404-408.</span></p>

<p class=par>Arjen van Weelden and Rinus Plasmeijer (2002). <span lang=EN-US>Towards
a Strongly Typed Functional Operating System. In: Peña, R. ed. Proceedings of
the 14th International Workshop on the Implementation of Functional Languages,
IFL 2002, Madrid, Spain, September 16-18, 2002, Technical Report 127-02,
Departamento de Sistemas Informáticos y Programación, Universidad Complutense
de Madrid, pages 301-319.</span></p>

</div>

</body>
</html>
